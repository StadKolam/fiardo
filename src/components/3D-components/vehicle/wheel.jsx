import { forwardRef } from 'react';
import { useGLTF } from '@react-three/drei';
import { useCylinder } from '@react-three/cannon';

useGLTF.preload('/Wheel.glb');

// Auto-generated by: https://github.com/pmndrs/gltfjsx
const Wheel = forwardRef(({ radius = 0.7, leftSide, ...props }, ref) => {
  const { nodes, materials } = useGLTF('/wheel_draco.glb');
  useCylinder(
    () => ({
      mass: 1,
      type: 'Kinematic',
      material: 'wheel',
      collisionFilterGroup: 0,
      args: [radius, radius, 0.2, 16],
      ...props,
    }),
    ref
  );
  return (
    <mesh ref={ref} scale={[0.3, 0.3, 0.3]}>
      <mesh rotation={[0, 0, ((leftSide ? 1 : -1) * Math.PI) / 2]}>
        <mesh
          geometry={nodes.wheel.geometry}
          material={materials['Material.001']}
          position={[0, 0.07, 0]}
        />
      </mesh>
    </mesh>
  );
});

export default Wheel;
